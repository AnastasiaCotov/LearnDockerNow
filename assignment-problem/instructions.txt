Dockerize BOTH apps - the Python and the Node app.

1) Create appropriate images for both apps (two separate images!).
HINT: Have a brief look at the app code to configure your images correctly!
- create Dockerfile
- build the image docker build .


2) Launch a container for each created image, making sure, 
that the app inside the container works correctly and is usable.

python app: 
    you need to run the docker container in an attached and interactive mode + the terminal
    - docker run -it imageid
    - to visualize running and not running containers:
        docker ps -a 

node app: 
    you need to run the docker container in an attached and interactive mode + the terminal
    - docker run -p 3000:3000 sha256:82fbf6311c0575c8d8423f2225f77f55a8b4ce757fdccf7635c111eeed2da8a3
    - to visualize running and not running containers:
        docker ps -a 
3) Re-create both containers and assign names to both containers.
Use these names to stop and restart both containers.
python app: 
    - docker run -it --name pyapp imageid
    - to visualize running and not running containers:
        docker ps -a 

node app: 
    you need to run the docker container in an attached and interactive mode + the terminal
    - docker run -p 3000:3000 --name myapp sha256:82fbf6311c0575c8d8423f2225f77f55a8b4ce757fdccf7635c111eeed2da8a3
    
4) Clean up (remove) all stopped (and running) containers, 
clean up all created images.
see the images:
    docker images

remove all images wich are not used by running containers:
    docker image prune

remove an image:
    docker rmi imageid

see all running and not running containers:
    docker ps -a 

delete a container:
    docker rm containername

Remove Specific Containers by Name or ID:
If you want to remove specific containers by their names or IDs, you can list them separated by spaces:    
    docker rm container1 container2 container3

Remove all containers:
    docker rm $(docker ps -a -q)

5) Re-build the images - this time with names and tags assigned to them.
    docker build -t repository:tags .

6) Run new containers based on the re-built images, ensuring that the containers
are removed automatically when stopped.

pythonapp: 
    docker run -it --rm imageid

node app:
     docker run -p 3000:3000 --name my --rm  sha256:f18fb9e4970b2822e17ef330d878e716e68ffa21226ff1c78ddc6458e5e07030